{"ast":null,"code":"var _jsxFileName = \"/Users/kmuldoon/Development/kevin-muldoon/kevin-muldoon/src/components/navbar/navbar.js\";\nimport React, { Component } from 'react';\nimport './navbar.css';\nimport SideMenuToggleButton from '../sidemenu/toggle_button/toggle_button';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = event => {\n      this.debounce(foo(), 250); // const { prevScrollpos } = this.state;\n      // const currentScrollPos = window.pageYOffset;\n      // const expanded = prevScrollpos > currentScrollPos;\n      // this.setState({\n      //     prevScrollpos: currentScrollPos,\n      //     expanded\n      //   });          \n    };\n\n    this.state = {\n      preScrollpos: window.pageYOffset,\n      expanded: true\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      className: this.state.expanded ? 'navbar expanded' : 'navbar compressed',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(SideMenuToggleButton, {\n      click: this.props.sideMenuToggleClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"navbar_logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"THE LOGO\")), React.createElement(\"div\", {\n      className: \"spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navbar_tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Products\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Users\"))))));\n  }\n\n  foo() {\n    const prevScrollpos = this.state.prevScrollpos;\n    const currentScrollPos = window.pageYOffset;\n    const expanded = prevScrollpos > currentScrollPos;\n    this.setState({\n      prevScrollpos: currentScrollPos,\n      expanded\n    });\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n\n} // const Navbar = (props) => {\n// return (\n//     <header className=\"navbar\">\n//         <nav className=\"navbar_container\">\n//             <div>\n//                 <SideMenuToggleButton click={props.sideMenuToggleClickHandler}/>\n//             </div>\n//             <div className=\"navbar_logo\"><a href=\"/\">THE LOGO</a></div>\n//             <div className=\"spacer\" />\n//             <div className=\"navbar_tabs\">\n//                 <ul>\n//                     <li><a href=\"/\">Products</a></li>\n//                     <li><a href=\"/\">Users</a></li>\n//                 </ul>\n//             </div>\n//         </nav>\n//     </header>\n// )\n// }\n\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/kmuldoon/Development/kevin-muldoon/kevin-muldoon/src/components/navbar/navbar.js"],"names":["React","Component","SideMenuToggleButton","Navbar","constructor","props","handleScroll","event","debounce","foo","state","preScrollpos","window","pageYOffset","expanded","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","sideMenuToggleClickHandler","prevScrollpos","currentScrollPos","setState","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './navbar.css';\nimport SideMenuToggleButton from '../sidemenu/toggle_button/toggle_button'\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            preScrollpos: window.pageYOffset,\n            expanded: true\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    render() {\n        return (\n            <header className={this.state.expanded ? 'navbar expanded' : 'navbar compressed'}>\n                <nav className=\"navbar_container\">\n                    <div>\n                        <SideMenuToggleButton click={this.props.sideMenuToggleClickHandler}/>\n                    </div>\n                    <div className=\"navbar_logo\"><a href=\"/\">THE LOGO</a></div>\n                    <div className=\"spacer\" />\n                    <div className=\"navbar_tabs\">\n                        <ul>\n                            <li><a href=\"/\">Products</a></li>\n                            <li><a href=\"/\">Users</a></li>\n                        </ul>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n    \n    handleScroll = (event) => {\n        \n\n        this.debounce(foo(), 250)\n\n        // const { prevScrollpos } = this.state;\n\n        // const currentScrollPos = window.pageYOffset;\n        // const expanded = prevScrollpos > currentScrollPos;\n\n        // this.setState({\n        //     prevScrollpos: currentScrollPos,\n        //     expanded\n        //   });          \n    }\n\n    foo() {\n\n        const { prevScrollpos } = this.state;\n\n        const currentScrollPos = window.pageYOffset;\n        const expanded = prevScrollpos > currentScrollPos;\n\n        this.setState({\n            prevScrollpos: currentScrollPos,\n            expanded\n          }); \n    }\n\n\n\n    debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n            var context = this, args = arguments;\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    };\n}\n\n// const Navbar = (props) => {\n    // return (\n    //     <header className=\"navbar\">\n    //         <nav className=\"navbar_container\">\n    //             <div>\n    //                 <SideMenuToggleButton click={props.sideMenuToggleClickHandler}/>\n    //             </div>\n    //             <div className=\"navbar_logo\"><a href=\"/\">THE LOGO</a></div>\n    //             <div className=\"spacer\" />\n    //             <div className=\"navbar_tabs\">\n    //                 <ul>\n    //                     <li><a href=\"/\">Products</a></li>\n    //                     <li><a href=\"/\">Users</a></li>\n    //                 </ul>\n    //             </div>\n    //         </nav>\n    //     </header>\n    // )\n// }\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}